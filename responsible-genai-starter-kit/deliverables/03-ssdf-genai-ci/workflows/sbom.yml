name: SBOM Generation

# SSDF Practice Mapping:
# - PW.4.1: Create and maintain Software Bill of Materials (SBOM)
# - PW.4.2: Acquire and maintain well-secured software components
# - PS.3.1: Archive and protect each software release
# - PS.3.2: Publish SBOMs for transparency

on:
  push:
    branches: [main]
    tags:
      - 'v*'  # Trigger on version tags (v1.0.0, v2.1.3, etc.)
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      format:
        description: 'SBOM format to generate'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - spdx-json
          - cyclonedx-json

# Least privilege permissions
permissions:
  contents: write      # For uploading SBOM to releases
  id-token: write      # For signing SBOMs with Sigstore
  attestations: write  # For GitHub attestations

jobs:
  generate-sbom:
    name: Generate Software Bill of Materials
    runs-on: ubuntu-latest
    timeout-minutes: 20

    # SSDF PW.4.1: Create comprehensive SBOM for all software components
    # Generates both SPDX and CycloneDX formats per industry standards

    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871  # v4.2.1
        with:
          fetch-depth: 0  # Full history for accurate version detection

      # SSDF PW.4.1: Syft generates SPDX-compliant SBOMs
      # SPDX is ISO/IEC 5962:2021 standard for software supply chain
      - name: Generate SBOM with Syft (SPDX format)
        uses: anchore/sbom-action@7ccf588e3cf3cc2611714c2eeae48550fbc17552  # v0.17.11
        with:
          format: spdx-json
          output-file: sbom-spdx.json
          upload-artifact: true
          upload-release-assets: true

      # Alternative: CycloneDX format (OWASP standard)
      - name: Generate SBOM with Syft (CycloneDX format)
        uses: anchore/sbom-action@7ccf588e3cf3cc2611714c2eeae48550fbc17552  # v0.17.11
        with:
          format: cyclonedx-json
          output-file: sbom-cyclonedx.json
          upload-artifact: false  # Only upload SPDX as primary

      # SSDF PW.4.1: Generate Python-specific SBOM
      - name: Set up Python
        if: hashFiles('requirements.txt', 'pyproject.toml', 'setup.py') != ''
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b  # v5.3.0
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        if: hashFiles('requirements.txt', 'pyproject.toml', 'setup.py') != ''
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Generate Python SBOM with CycloneDX
        if: hashFiles('requirements.txt', 'pyproject.toml', 'setup.py') != ''
        run: |
          pip install cyclonedx-bom
          cyclonedx-py requirements requirements.txt -o sbom-python-cyclonedx.json --format json || true
        continue-on-error: true

      # SSDF PW.4.1: Generate Node.js-specific SBOM
      - name: Set up Node.js
        if: hashFiles('package.json', 'package-lock.json') != ''
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af  # v4.1.0
        with:
          node-version: '20'

      - name: Generate Node.js SBOM with CycloneDX
        if: hashFiles('package.json', 'package-lock.json') != ''
        run: |
          npm install -g @cyclonedx/cyclonedx-npm
          cyclonedx-npm --output-file sbom-npm-cyclonedx.json --output-format json || true
        continue-on-error: true

      # SSDF PW.4.1: Attest SBOM provenance using GitHub native attestations
      # Creates cryptographically signed statement linking SBOM to this build
      - name: Attest SBOM provenance
        uses: actions/attest-sbom@5026d3663739160db546203eeaffa6aa1c51a9d6  # v1.4.1
        with:
          subject-path: 'sbom-spdx.json'
          sbom-path: 'sbom-spdx.json'

      # SSDF PS.3.1: Sign SBOMs with Sigstore Cosign
      # Provides non-repudiation and integrity verification
      - name: Install Cosign
        uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da  # v3.7.0

      - name: Sign SBOM with Cosign (keyless)
        run: |
          # Keyless signing using GitHub OIDC token (SLSA L2 compliant)
          cosign sign-blob --yes \
            --bundle sbom-spdx.json.bundle \
            sbom-spdx.json

          cosign sign-blob --yes \
            --bundle sbom-cyclonedx.json.bundle \
            sbom-cyclonedx.json

      # SSDF PW.4.1: Validate SBOM correctness
      - name: Validate SBOM with NTIA checker
        run: |
          # NTIA minimum elements checker for SBOM compliance
          curl -sSfL https://raw.githubusercontent.com/spdx/ntia-conformance-checker/main/pyproject.toml
          pip install ntia-conformance-checker || true
          ntia-checker --file sbom-spdx.json --verbose || true
        continue-on-error: true

      # SSDF PW.4.4: Scan SBOM for known vulnerabilities
      - name: Scan SBOM with Grype
        id: grype_scan
        uses: anchore/scan-action@64a33b277ea7a1215a3c142735a1091341939ff5  # v4.2.0
        with:
          sbom: sbom-spdx.json
          output-format: sarif
          severity-cutoff: medium

      - name: Upload vulnerability results
        uses: github/codeql-action/upload-sarif@f09c1c0a94de965c15400f5634aa42fac8fb8f88  # v3.27.5
        with:
          sarif_file: ${{ steps.grype_scan.outputs.sarif }}
          category: 'sbom-vulnerability-scan'

      # SSDF PS.3.2: Archive all SBOM artifacts
      - name: Upload SBOM artifacts
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882  # v4.4.3
        with:
          name: sbom-artifacts
          path: |
            sbom-*.json
            sbom-*.json.bundle
          retention-days: 90

      # SSDF PS.3.2: Publish SBOMs to GitHub Releases
      - name: Upload SBOM to release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191  # v2.0.8
        with:
          files: |
            sbom-spdx.json
            sbom-spdx.json.bundle
            sbom-cyclonedx.json
            sbom-cyclonedx.json.bundle

      # SSDF PS.3.2: Generate human-readable SBOM summary
      - name: Generate SBOM summary
        run: |
          echo "## SBOM Generation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Generated SBOMs:**" >> $GITHUB_STEP_SUMMARY
          echo "- SPDX JSON: \`sbom-spdx.json\`" >> $GITHUB_STEP_SUMMARY
          echo "- CycloneDX JSON: \`sbom-cyclonedx.json\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**SSDF Practices Implemented:**" >> $GITHUB_STEP_SUMMARY
          echo "- PW.4.1: Comprehensive SBOM generation (SPDX + CycloneDX)" >> $GITHUB_STEP_SUMMARY
          echo "- PW.4.2: Component tracking and documentation" >> $GITHUB_STEP_SUMMARY
          echo "- PW.4.4: SBOM-based vulnerability scanning" >> $GITHUB_STEP_SUMMARY
          echo "- PS.3.1: Cryptographic signing with Sigstore" >> $GITHUB_STEP_SUMMARY
          echo "- PS.3.2: SBOM publishing to releases" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Display component counts
          if [ -f sbom-spdx.json ]; then
            component_count=$(jq '.packages | length' sbom-spdx.json)
            echo "**Total Components:** $component_count" >> $GITHUB_STEP_SUMMARY
          fi

  dependency-diff:
    name: Dependency Diff (PR only)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    timeout-minutes: 10

    # SSDF PW.4.2: Review dependency changes in PRs
    # Identifies new dependencies and license changes

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871  # v4.2.1

      # Show dependency changes in PR
      - name: Dependency Review
        uses: actions/dependency-review-action@4081bf99e2866ebe428fc0477b69eb4fcda7220a  # v4.5.0
        with:
          fail-on-severity: moderate
          comment-summary-in-pr: always
          # Deny list for problematic licenses
          deny-licenses: GPL-2.0, GPL-3.0, AGPL-3.0, SSPL-1.0

      - name: Comment SBOM diff on PR
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea  # v7.0.1
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '**SBOM Review**: Dependency changes detected. Review the Dependency Review Action results above for licensing and security concerns.\n\n**SSDF Practice**: PW.4.2 - All new dependencies reviewed for security and license compliance.'
            })
