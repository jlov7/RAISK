# RAG Application Checklist
# Aligned to NIST AI 600-1 (Generative AI Profile)

checklist_metadata:
  pattern: "Retrieval-Augmented Generation (RAG)"
  version: "0.1.0"
  last_updated: "2025-01-XX"
  description: "Risk management controls for RAG systems combining vector databases, embeddings, and generative LLMs"

controls:
  # GOVERN
  - control_id: "RAG-GOV-01"
    function: "Govern"
    ref: "AI 600-1 Section 3.1.1"
    action: "Establish AI governance committee with authority over RAG deployments"
    required_artifacts:
      - "Governance charter documenting roles, responsibilities, and escalation paths"
      - "Meeting minutes from initial governance kickoff"
    owner_role: "CISO / Chief AI Officer"
    lifecycle_stage: "design"
    acceptance_criteria: "Committee meets monthly; has veto power over high-risk deployments"

  - control_id: "RAG-GOV-02"
    function: "Govern"
    ref: "AI 600-1 Section 3.1.2"
    action: "Define acceptable use policy for RAG system (permitted queries, prohibited content)"
    required_artifacts:
      - "Acceptable Use Policy (AUP) document"
      - "User training completion records"
    owner_role: "Legal / Compliance"
    lifecycle_stage: "design"
    acceptance_criteria: "AUP reviewed by legal; acknowledged by all users before access granted"

  - control_id: "RAG-GOV-03"
    function: "Govern"
    ref: "AI 600-1 Section 3.1.3"
    action: "Assign data steward responsible for vector database content quality and provenance"
    required_artifacts:
      - "RACI matrix with named data steward"
      - "Data quality SLA"
    owner_role: "Data Governance Lead"
    lifecycle_stage: "design"
    acceptance_criteria: "Data steward reviews all ingestion pipelines; audits DB quarterly"

  # MAP
  - control_id: "RAG-MAP-01"
    function: "Map"
    ref: "AI 600-1 Section 3.2.1"
    action: "Document RAG system context: intended use, user base, sensitivity of data"
    required_artifacts:
      - "System context document (use Model Card template)"
      - "Data classification labels (public/internal/confidential)"
    owner_role: "Product Manager / ML Lead"
    lifecycle_stage: "design"
    acceptance_criteria: "Context doc approved by governance committee"

  - control_id: "RAG-MAP-02"
    function: "Map"
    ref: "AI 600-1 Section 3.2.2"
    action: "Inventory all data sources feeding vector database (documents, APIs, databases)"
    required_artifacts:
      - "Data lineage diagram"
      - "Source system access logs"
    owner_role: "Data Engineer"
    lifecycle_stage: "design"
    acceptance_criteria: "Every document in vector DB traces to approved source system"

  - control_id: "RAG-MAP-03"
    function: "Map"
    ref: "AI 600-1 Section 2.3 (Data Privacy)"
    action: "Identify PII/PHI in retrieval corpus; classify sensitivity"
    required_artifacts:
      - "PII scan report (automated + manual review)"
      - "Data minimization plan"
    owner_role: "Privacy Officer"
    lifecycle_stage: "design"
    acceptance_criteria: "All PII documented; retention policies defined"

  - control_id: "RAG-MAP-04"
    function: "Map"
    ref: "AI 600-1 Section 2.7 (Information Integrity)"
    action: "Map prompt injection attack surface (user inputs, retrieval context, system prompts)"
    required_artifacts:
      - "Threat model (see /docs/threat-model.md)"
      - "Attack tree diagram"
    owner_role: "Security Architect"
    lifecycle_stage: "design"
    acceptance_criteria: "Threat model reviewed by red team; mitigations planned for critical risks"

  # MEASURE
  - control_id: "RAG-MEAS-01"
    function: "Measure"
    ref: "AI 600-1 Section 3.3.1"
    action: "Establish baseline performance metrics (retrieval precision/recall, answer quality)"
    required_artifacts:
      - "Golden evaluation dataset (100+ Q&A pairs)"
      - "Baseline test report"
    owner_role: "ML Engineer"
    lifecycle_stage: "development"
    acceptance_criteria: "Baseline documented; thresholds set for regression detection"

  - control_id: "RAG-MEAS-02"
    function: "Measure"
    ref: "AI 600-1 Section 3.3.2"
    action: "Deploy automated refusal-rate scoring (system refuses harmful/out-of-scope queries)"
    required_artifacts:
      - "Refusal-rate eval integrated in D2 harness"
      - "Test dataset with 50+ adversarial prompts"
    owner_role: "ML Engineer"
    lifecycle_stage: "development"
    acceptance_criteria: "Refusal rate ≥ 98% on adversarial dataset"

  - control_id: "RAG-MEAS-03"
    function: "Measure"
    ref: "AI 600-1 Section 2.3 (Data Privacy)"
    action: "Deploy automated PII detection on RAG outputs"
    required_artifacts:
      - "PII scorer integrated in D2 harness"
      - "Test report showing 0% PII leakage on golden dataset"
    owner_role: "ML Engineer"
    lifecycle_stage: "development"
    acceptance_criteria: "PII scorer runs on every release candidate; blocks deployment if >0 leaks detected"

  - control_id: "RAG-MEAS-04"
    function: "Measure"
    ref: "AI 600-1 Section 2.7 (Information Integrity)"
    action: "Measure citation accuracy (does RAG cite sources correctly?)"
    required_artifacts:
      - "Citation accuracy eval (see D2 harness)"
      - "Test report"
    owner_role: "ML Engineer"
    lifecycle_stage: "development"
    acceptance_criteria: "Citation accuracy ≥ 95%; hallucinated sources flagged"

  - control_id: "RAG-MEAS-05"
    function: "Measure"
    ref: "AI 600-1 Section 2.2 (Confabulation/Hallucination)"
    action: "Red-team for prompt injection vulnerabilities"
    required_artifacts:
      - "Red team report with attack transcripts"
      - "Remediation plan for successful attacks"
    owner_role: "Security Team"
    lifecycle_stage: "development"
    acceptance_criteria: "Red team attempts ≥10 injection techniques; <10% success rate acceptable"

  # MANAGE
  - control_id: "RAG-MGT-01"
    function: "Manage"
    ref: "AI 600-1 Section 3.4.1"
    action: "Implement input validation and sanitization for user queries"
    required_artifacts:
      - "Input validation rules (length limits, character filters, blocked patterns)"
      - "Code review approval"
    owner_role: "Backend Engineer"
    lifecycle_stage: "development"
    acceptance_criteria: "Validation tested with OWASP injection payloads; no bypasses found"

  - control_id: "RAG-MGT-02"
    function: "Manage"
    ref: "AI 600-1 Section 3.4.2"
    action: "Deploy output filtering to remove PII before displaying to users"
    required_artifacts:
      - "PII redaction service (regex + NER model)"
      - "Test report showing redaction effectiveness"
    owner_role: "ML Engineer"
    lifecycle_stage: "development"
    acceptance_criteria: "Output filter tested on 100+ PII examples; 100% redaction rate"

  - control_id: "RAG-MGT-03"
    function: "Manage"
    ref: "AI 600-1 Section 3.4.3"
    action: "Implement rate limiting and resource quotas per user/tenant"
    required_artifacts:
      - "Rate limiting configuration (e.g., 10 queries/minute)"
      - "Load test results"
    owner_role: "Platform Engineer"
    lifecycle_stage: "deployment"
    acceptance_criteria: "Rate limits enforced; system stable under 10x normal load"

  - control_id: "RAG-MGT-04"
    function: "Manage"
    ref: "AI 600-1 Section 3.4.4"
    action: "Enable audit logging for all queries and responses"
    required_artifacts:
      - "Centralized logging (e.g., ELK, Splunk)"
      - "Log retention policy (90 days minimum)"
    owner_role: "DevOps / SRE"
    lifecycle_stage: "deployment"
    acceptance_criteria: "All queries logged with timestamp, user_id, query text, response; logs tamper-evident"

  - control_id: "RAG-MGT-05"
    function: "Manage"
    ref: "AI 600-1 Section 3.4.5"
    action: "Establish incident response plan for AI safety events (PII leak, jailbreak, data poisoning)"
    required_artifacts:
      - "AI incident runbook"
      - "Tabletop exercise report"
    owner_role: "Security Team"
    lifecycle_stage: "deployment"
    acceptance_criteria: "Runbook tested in tabletop; <1 hour mean time to containment"

  - control_id: "RAG-MGT-06"
    function: "Manage"
    ref: "AI 600-1 Section 3.4.6"
    action: "Deploy continuous monitoring for model/retrieval drift"
    required_artifacts:
      - "Monitoring dashboard (retrieval precision, answer quality)"
      - "Alerting rules (e.g., precision drops >10%)"
    owner_role: "ML Ops"
    lifecycle_stage: "monitoring"
    acceptance_criteria: "Dashboard updated hourly; alerts trigger automated retraining workflow"

  - control_id: "RAG-MGT-07"
    function: "Manage"
    ref: "AI 600-1 Section 3.4.7"
    action: "Implement vector database access controls (prevent cross-tenant data leakage)"
    required_artifacts:
      - "Access control policy (RBAC or ABAC)"
      - "Penetration test report (attempt cross-tenant access)"
    owner_role: "Platform Engineer"
    lifecycle_stage: "deployment"
    acceptance_criteria: "Pentest confirms isolation; no cross-tenant retrieval possible"

  - control_id: "RAG-MGT-08"
    function: "Manage"
    ref: "AI 600-1 Section 2.8 (Value Chain)"
    action: "Vet third-party dependencies (vector DB, embedding API, LLM provider)"
    required_artifacts:
      - "Vendor risk assessment"
      - "SBOMs for all components (see D3)"
    owner_role: "Procurement / Security"
    lifecycle_stage: "design"
    acceptance_criteria: "All vendors assessed; contracts include AI-specific SLAs (data deletion, audit rights)"
